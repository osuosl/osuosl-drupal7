3.2.12 (Media Mark)
02a1a81102cc6857a82cd5c56913b180ff78daa0
o:Sass::Tree::RootNode
:@templateI"û*//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
// Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
// em-calc(10 20 30px 40);
// Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
// em-calc((10, 20, 30, 40px));
// Optionally call with a different base (eg: 8px) to calculate em.
// em-calc(16px 32px 48px, 8px);
// If you require to comma separate your list
// em-calc((16px, 32px, 48), 8px);

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }
  @return $emValues;
}

// Support for the old syntax

@function emCalc($values){
  @return em-calc($values);
}

// Maybe you want to create rems with pixels
// $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
// @function remCalc($pxWidth) {
//   @return $pxWidth / $rem-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

// Used to provide media query values for javascript components.
meta.foundation-mq-small {
  font-family: $small;
  width: $small-screen;
}

meta.foundation-mq-medium {
  font-family: $medium;
  width: $medium-screen;
}

meta.foundation-mq-large {
  font-family: $large;
  width: $large-screen;
}

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:ET:@options{ :@has_childrenT:
@linei:@children[Zo:Sass::Tree::CommentNode
:@value[I")/*
 * Global Foundation Mixins
 * */;T;@:
@type:silent;
i;[ o:Sass::Tree::VariableNode:
@expro:Sass::Script::Bool;T;
i
;@:
@nameI"experimental;T;@;
i
;[ :@guardedI"!default;To;
;[I"0/* We use this to control border radius. */;T;@;;;
i;[ o:Sass::Tree::MixinDefNode;I"radius;T:
@args[[o:Sass::Script::Variable:@underscored_nameI"radius;T;I"radius;T;@o;	;I"global_radius;T;I"global-radius;T;@;
i:@splat0;[u:Sass::Tree::IfNode([o:Sass::Script::Variable	:@underscored_nameI"radius:ET:
@nameI"radius;T:@options{ :
@linei0[u:Sass::Tree::IfNode[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-border-radius;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;[I"border-radius;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i:
@tabsi :@children[ ;
i;	T;@o;
;[I"F/* We use this to create equal side border radius on elements. */;T;@;;;
i;[ o;;I"side-radius;T;[[o;;I"	side;T;I"	side;T;@0[o;;I"radius;T;I"radius;T;@o;	;I"global_radius;T;I"global-radius;T;@;
i;0;[u;É[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"	side:ET:
@nameI"	side;	T:@options{ :
@linei;@
:@operator:eq;i:@operand2o:Sass::Script::String	:@valueI"	left;	T;@
:
@type:identifier;iu:Sass::Tree::IfNodeY[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"	side:ET:
@nameI"	side;	T:@options{ :
@linei";@
:@operator:eq;i":@operand2o:Sass::Script::String	:@valueI"
right;	T;@
:
@type:identifier;i"u:Sass::Tree::IfNodeâ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"	side:ET:
@nameI"	side;	T:@options{ :
@linei,;@
:@operator:eq;i,:@operand2o:Sass::Script::String	:@valueI"top;	T;@
:
@type:identifier;i,u:Sass::Tree::IfNodey[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"	side:ET:
@nameI"	side;	T:@options{ :
@linei6;@
:@operator:eq;i6:@operand2o:Sass::Script::String	:@valueI"bottom;	T;@
:
@type:identifier;i60[u:Sass::Tree::IfNodeh[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei70[	o:Sass::Tree::PropNode:@prop_syntax:new;[I"#-moz-border-radius-bottomright;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i8;	@	;
i8:
@tabsi :@children[ o;;;;[I""-moz-border-radius-bottomleft;T;o; 	;I"radius;T;I"radius;T;	@	;
i9;	@	;
i9;i ;[ o;;;;[I"'-webkit-border-bottom-right-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i:;	@	;
i:;i ;[ o;;;;[I"&-webkit-border-bottom-left-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i;;	@	;
i;;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-bottom-right-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i=;@
;i=:
@tabsi :@children[ o;;;;
[I"border-bottom-left-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i>;@
;i>;i ;[ [u;\[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei-0[	o:Sass::Tree::PropNode:@prop_syntax:new;[I" -moz-border-radius-topright;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i.;	@	;
i.:
@tabsi :@children[ o;;;;[I"-moz-border-radius-topleft;T;o; 	;I"radius;T;I"radius;T;	@	;
i/;	@	;
i/;i ;[ o;;;;[I"$-webkit-border-top-right-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i0;	@	;
i0;i ;[ o;;;;[I"#-webkit-border-top-left-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i1;	@	;
i1;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-top-right-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i3;@
;i3:
@tabsi :@children[ o;;;;
[I"border-top-left-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i4;@
;i4;i ;[ [u;d[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei#0[	o:Sass::Tree::PropNode:@prop_syntax:new;[I" -moz-border-radius-topright;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i$;	@	;
i$:
@tabsi :@children[ o;;;;[I"#-moz-border-radius-bottomright;T;o; 	;I"radius;T;I"radius;T;	@	;
i%;	@	;
i%;i ;[ o;;;;[I"$-webkit-border-top-right-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i&;	@	;
i&;i ;[ o;;;;[I"'-webkit-border-bottom-right-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i';	@	;
i';i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-top-right-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i);@
;i):
@tabsi :@children[ o;;;;
[I"border-bottom-right-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i*;@
;i*;i ;[ [u;`[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei0[	o:Sass::Tree::PropNode:@prop_syntax:new;[I""-moz-border-radius-bottomleft;T:@valueo; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i:
@tabsi :@children[ o;;;;[I"-moz-border-radius-topleft;T;o; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i;i ;[ o;;;;[I"&-webkit-border-bottom-left-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i;i ;[ o;;;;[I"#-webkit-border-top-left-radius;T;o; 	;I"radius;T;I"radius;T;	@	;
i;	@	;
i;i ;[ o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-bottom-left-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i;@
;i:
@tabsi :@children[ o;;;;
[I"border-top-left-radius;	T;o;	;I"radius;	T;
I"radius;	T;@
;i ;@
;i ;i ;[ ;
i;	T;@o;
;[I"E/* We can control whether or not we have inset shadows edges. */;T;@;;;
iB;[ o;;I"inset-shadow;T;[[o;;I"active;T;I"active;T;@o;;T;
iC;@;0;[u;Õ[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@lineiD0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-box-shadow;T:@valueo:Sass::Script::List	:@separator:
space;[o; 	;I"shiny_edge_size;T;I"shiny-edge-size;T;	@	;
iEo; 	;I"shiny_edge_color;T;I"shiny-edge-color;T;	@	;
iEo:Sass::Script::String	;I"
inset;T;	@	:
@type:identifier;
iE;	@	;
iE;	@	;
iE:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;[I"box-shadow;T;o:Sass::Script::List	:@separator:
space;[o;	;I"shiny_edge_size;T;I"shiny-edge-size;T;@;
iGo;	;I"shiny_edge_color;T;I"shiny-edge-color;T;@;
iGo:Sass::Script::String	;I"
inset;T;@;:identifier;
iG;@;
iG;@;
iG:
@tabsi ;[ u;S[o:Sass::Script::Variable	:@underscored_nameI"active:ET:
@nameI"active;T:@options{ :
@lineiI0[o:Sass::Tree::RuleNode:
@rule[I"&:active;T:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Parent;
iI:@filenameI" ;To:Sass::Selector::Pseudo
;[I"active;T:@syntactic_type:
class;@;
iI:	@arg0;@;
iI;@;
iI;	@	:@has_childrenT;
iI:
@tabsi :@children[u:Sass::Tree::IfNodeã[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@lineiJ0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-box-shadow;T:@valueo:Sass::Script::List	:@separator:
space;[o; 	;I"shiny_edge_size;T;I"shiny-edge-size;T;	@	;
iKo; 	;I"shiny_edge_active_color;T;I"shiny-edge-active-color;T;	@	;
iKo:Sass::Script::String	;I"
inset;T;	@	:
@type:identifier;
iK;	@	;
iK;	@	;
iK:
@tabsi :@children[ o:Sass::Tree::PropNode:@prop_syntax:new;[I"box-shadow;T:@valueo:Sass::Script::List	:@separator:
space;#[o; 	;I"shiny_edge_size;T;I"shiny-edge-size;T;	@	;
iMo; 	;I"shiny_edge_active_color;T;I"shiny-edge-active-color;T;	@	;
iMo:Sass::Script::String	;#I"
inset;T;	@	:
@type:identifier;
iM;	@	;
iM;	@	;
iM;i ;[ ;
iC;	T;@o;
;[I"5/* We use this to add transitions to elements */;T;@;;;
iP;[ o;;I"single-transition;T;[[o;;I"property;T;I"property;T;@o;!	;I"all;T;@;;";
iQ[o;;I"
speed;T;I"
speed;T;@o:Sass::Script::Number;i,:@numerator_units[I"ms;T:@denominator_units[ ;@;
iQ:@originalI"
300ms;F[o;;I"	ease;T;I"	ease;T;@o;!	;I"ease-out;T;@;;";
iQ;0;[u;Z[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@lineiR0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-transition;T:@valueo:Sass::Script::List	:@separator:
space;[o; 	;I"property;T;I"property;T;	@	;
iSo; 	;I"
speed;T;I"
speed;T;	@	;
iSo; 	;I"	ease;T;I"	ease;T;	@	;
iS;	@	;
iS;	@	;
iS:
@tabsi :@children[ o;;;;[I"-moz-transition;T;o;	;;;[o; 	;I"property;T;I"property;T;	@	;
iTo; 	;I"
speed;T;I"
speed;T;	@	;
iTo; 	;I"	ease;T;I"	ease;T;	@	;
iT;	@	;
iT;	@	;
iT;i ;[ o;;;;[I"transition;T;o;	;; ;[o;	;I"property;T;I"property;T;@;
iVo;	;I"
speed;T;I"
speed;T;@;
iVo;	;I"	ease;T;I"	ease;T;@;
iV;@;
iV;@;
iV;#i ;[ ;
iQ;	T;@o;
;[I"@/* We use this to add box-sizing across browser prefixes */;T;@;;;
iY;[ o;;I"box-sizing;T;[[o;;I"	type;T;I"	type;T;@o;!	;I"border-box;T;@;;";
iZ;0;[u;e[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei[0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-moz-box-sizing;T:@valueo; 	;I"	type;T;I"	type;T;	@	;
i\;	@	;
i\:
@tabsi :@children[ o;;;;[I"-webkit-box-sizing;T;o; 	;I"	type;T;I"	type;T;	@	;
i];	@	;
i];i ;[ o;;;;[I"box-sizing;T;o;	;I"	type;T;I"	type;T;@;
i_;@;
i_;#i ;[ ;
iZ;	T;@o;
;[I"6/* We use this to create equilateral triangles */;T;@;;;
ib;[ o;;I"css-triangle;T;[[o;;I"triangle_size;T;I"triangle-size;T;@0[o;;I"triangle_color;T;I"triangle-color;T;@0[o;;I"triangle_direction;T;I"triangle-direction;T;@0;0;[o;;;;[I"content;T;o;!;I""";T;@;;";@;
id;#i ;[ o;;;;[I"display;T;o;!;I"
block;T;@;;";@;
ie;#i ;[ o;;;;[I"
width;T;o;!;I"0;T;@;;";@;
if;#i ;[ o;;;;[I"height;T;o;!;I"0;T;@;;";@;
ig;#i ;[ o;;;;[I"border;T;o;	;; ;[o;!	;I"
inset;T;@;;";
iho;	;I"triangle_size;T;I"triangle-size;T;@;
ih;@;
ih;@;
ih;#i ;[ u;[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"triangle_direction:ET:
@nameI"triangle-direction;	T:@options{ :
@lineii;@
:@operator:eq;ii:@operand2o:Sass::Script::String	:@valueI"top;	T;@
:
@type:identifier;ii0[o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-color;	T;o:Sass::Script::List	:@separator:
space;[	o;	;I"triangle_color;	T;
I"triangle-color;	T;@
;ijo;	;I"transparent;	T;@
;;;ijo;	;I"transparent;	T;@
;;;ijo;	;I"transparent;	T;@
;;;ij;@
;ij;@
;ij:
@tabsi :@children[ o;;;;
[I"border-top-style;	T;o;;I"
solid;	T;@
;;;@
;ik;i ;[ u;¢[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"triangle_direction:ET:
@nameI"triangle-direction;	T:@options{ :
@lineim;@
:@operator:eq;im:@operand2o:Sass::Script::String	:@valueI"bottom;	T;@
:
@type:identifier;im0[o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-color;	T;o:Sass::Script::List	:@separator:
space;[	o;	;I"transparent;	T;@
;;;ino;	;I"transparent;	T;@
;;;ino;	;I"triangle_color;	T;
I"triangle-color;	T;@
;ino;	;I"transparent;	T;@
;;;in;@
;in;@
;in:
@tabsi :@children[ o;;;;
[I"border-bottom-style;	T;o;;I"
solid;	T;@
;;;@
;io;i ;[ u;[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"triangle_direction:ET:
@nameI"triangle-direction;	T:@options{ :
@lineiq;@
:@operator:eq;iq:@operand2o:Sass::Script::String	:@valueI"	left;	T;@
:
@type:identifier;iq0[o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-color;	T;o:Sass::Script::List	:@separator:
space;[	o;	;I"transparent;	T;@
;;;iro;	;I"transparent;	T;@
;;;iro;	;I"transparent;	T;@
;;;iro;	;I"triangle_color;	T;
I"triangle-color;	T;@
;ir;@
;ir;@
;ir:
@tabsi :@children[ o;;;;
[I"border-left-style;	T;o;;I"
solid;	T;@
;;;@
;is;i ;[ u; [o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"triangle_direction:ET:
@nameI"triangle-direction;	T:@options{ :
@lineiu;@
:@operator:eq;iu:@operand2o:Sass::Script::String	:@valueI"
right;	T;@
:
@type:identifier;iu0[o:Sass::Tree::PropNode:@prop_syntax:new;
[I"border-color;	T;o:Sass::Script::List	:@separator:
space;[	o;	;I"transparent;	T;@
;;;ivo;	;I"triangle_color;	T;
I"triangle-color;	T;@
;ivo;	;I"transparent;	T;@
;;;ivo;	;I"transparent;	T;@
;;;iv;@
;iv;@
;iv:
@tabsi :@children[ o;;;;
[I"border-right-style;	T;o;;I"
solid;	T;@
;;;@
;iw;i ;[ ;
ic;	T;@o;
;[I")/* We use this to do clear floats */;T;@;;;
i{;[ o;;I"clearfix;T;[ ;0;[o;;;;[I"
*zoom;T;o;!;I"1;T;@;;";@;
i};#i ;[ o:Sass::Tree::RuleNode:
@rule[I"&:before, &:after;T:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;,[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;,[o:Sass::Selector::Parent;
i~:@filenameI" ;To:Sass::Selector::Pseudo
;[I"before;T:@syntactic_type:
class;4@æ;
i~:	@arg0;4@æ;
i~o;-;,[o;.
;/o;0;1{ ;20;,[o;3;
i~;4@æo;5
;[I"
after;T;6;7;4@æ;
i~;80;4@æ;
i~;4@æ;
i~;@;	T;
i~;#i ;[o;;;;[I"content;T;o;!;I"" ";T;@;;";@;
i~;#i ;[ o;;;;[I"display;T;o;!;I"
table;T;@;;";@;
i~;#i ;[ o;(;)[I"&:after;T;*o;+;,[o;-;,[o;.
;/o;0;1{ ;20;,[o;3;
i;4I" ;To;5
;[I"
after;T;6;7;4@;
i;80;4@;
i;4@;
i;@;	T;
i;#i ;[o;;;;[I"
clear;T;o;!;I"	both;T;@;;";@;
i;#i ;[ ;
i|;	T;@o;
;[I"@/* We use this to add a glowing effect to block elements */;T;@;;;
i~;[ o;;I"block-glowing-effect;T;[[o;;I"selector;T;I"selector;T;@o;!	;I"
focus;T;@;;";
i[o;;I"fade_time;T;I"fade-time;T;@o;$;i,;%[I"ms;T;&[ ;@;
i;'I"
300ms;F[o;;I"glowing_effect_color;T;I"glowing-effect-color;T;@o:Sass::Script::Funcall;I"fade-out;T;0;@;[o;	;I"primary_color;T;I"primary-color;T;@;
io;$;f	0.25;%[ ;&[ ;@;
i;'I"	0.25;F;
i:@keywords{ ;0;[u;[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-transition;T:@valueo:Sass::Script::List	:@separator:
comma;[o;	;:
space;[o:Sass::Script::String	;I"-webkit-box-shadow;T;	@	:
@type:identifier;
io; 	;I"fade_time;T;I"fade-time;T;	@	;
i;	@	;
io;	;;;[o;	;I"border-color;T;	@	;;;
io; 	;I"fade_time;T;I"fade-time;T;	@	;
io;	;I"ease-in-out;T;	@	;;;
i;	@	;
i;	@	;
i;	@	;
i:
@tabsi :@children[ o;;;;[I"-moz-transition;T;o;	;;;[o;	;;;[o;	;I"-moz-box-shadow;T;	@	;;;
io; 	;I"fade_time;T;I"fade-time;T;	@	;
i;	@	;
io;	;;;[o;	;I"border-color;T;	@	;;;
io; 	;I"fade_time;T;I"fade-time;T;	@	;
io;	;I"ease-in-out;T;	@	;;;
i;	@	;
i;	@	;
i;	@	;
i;i ;[ o;;;;[I"transition;T;o;	;:
comma;[o;	;; ;[o;!	;I"box-shadow;T;@;;";
io;	;I"fade_time;T;I"fade-time;T;@;
i;@;
io;	;; ;[o;!	;I"border-color;T;@;;";
io;	;I"fade_time;T;I"fade-time;T;@;
io;!	;I"ease-in-out;T;@;;";
i;@;
i;@;
i;@;
i;#i ;[ o;(;)[I"&:;To;	;I"selector;T;I"selector;T;@;
i;@;	T;
i;#i ;[u;[o:Sass::Script::Variable	:@underscored_nameI"experimental:ET:
@nameI"experimental;T:@options{ :
@linei0[o:Sass::Tree::PropNode:@prop_syntax:new;[I"-webkit-box-shadow;T:@valueo:Sass::Script::List	:@separator:
space;[	o:Sass::Script::Number;i :@numerator_units[ :@denominator_units[ ;	@	;
i:@originalI"0;Fo;;i ;[ ;@;	@	;
i;I"0;Fo;;i
;[I"px;T;[ ;	@	;
i;I"5px;Fo; 	;I"glowing_effect_color;T;I"glowing-effect-color;T;	@	;
i;	@	;
i;	@	;
i:
@tabsi :@children[ o;;;;[I"-moz-box-shadow;T;o;	;;;[	o;;i ;[ ;@;	@	;
i;I"0;Fo;;i ;[ ;@;	@	;
i;I"0;Fo;;i
;[I"px;T;[ ;	@	;
i;I"5px;Fo; 	;I"glowing_effect_color;T;I"glowing-effect-color;T;	@	;
i;	@	;
i;	@	;
i;i ;[ o;;;;[I"box-shadow;T;o;	;; ;[	o;$;i ;%[ ;&@;;@;
i;'I"0;Fo;$;i ;%[ ;&@;;@;
i;'I"0;Fo;$;i
;%[I"px;T;&[ ;@;
i;'I"5px;Fo;	;I"glowing_effect_color;T;I"glowing-effect-color;T;@;
i;@;
i;@;
i;#i ;[ o;;;;[I"border-color;T;o;	;I"glowing_effect_color;T;I"glowing-effect-color;T;@;
i;@;
i;#i ;[ ;
i;	T;@o;
;[I"%/*
 * Foundation Variables
 * */;T;@;;;
i;[ o;
;[I"/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;T;@;;;
i;[ o;
;[I"/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;T;@;;;
i;[ o;;o;$;ii;%[I"%;T;&[ ;@;
i;'I"	100%;F;I"base-font-size;T;@;
i;[ ;I"!default;To;
;[I"B/* $base-line-height is 24px while $base-font-size is 16px */;T;@;;;
i;[ o;;o;$;i;%[I"%;T;&[ ;@;
i;'I"	150%;F;I"base-line-height;T;@;
i;[ ;I"!default;To;
;[I"M/* This is the default html and body font-size for the base em value. */;T;@;;;
i;[ o;;o;$;i;%[I"px;T;&[ ;@;
i ;'I"	16px;F;I"em-base;T;@;
i ;[ ;I"!default;To;
;[I"7/* It strips the unit of measure and returns it */;T;@;;;
i¢;[ o:Sass::Tree::FunctionNode;I"strip-unit;T;0;@;	T;[[o;;I"num;T;I"num;T;@0;
i£;[o:Sass::Tree::ReturnNode	;o:Sass::Script::Operation
:@operand1o;	;I"num;T;I"num;T;@;
i¤;@:@operator:div;
i¤:@operand2o;>
;?o;>
;?o;	;I"num;T;I"num;T;@;
i¤;@;@:
times;
i¤;Bo;$;i ;%[ ;&@;;@;
i¤;'I"0;F;@;@:	plus;
i¤;Bo;$;i;%[ ;&@;;@;
i¤;'I"1;F;@;
i¤;[ o;
;[I"	/* New Syntax, allows to optionally calculate on a different base value to counter compounding effect of em's.
 * Call with 1, 2, 3 or 4 parameters, 'px' is not required but supported
 * em-calc(10 20 30px 40);
 * Space delimited, if you want to delimit using comma's, wrap it in another pair of brackets
 * em-calc((10, 20, 30, 40px));
 * Optionally call with a different base (eg: 8px) to calculate em.
 * em-calc(16px 32px 48px, 8px);
 * If you require to comma separate your list
 * em-calc((16px, 32px, 48), 8px); */;T;@;;;
i§;[ o;<;I"convert-to-em;T;0;@;	T;[[o;;I"
value;T;I"
value;T;@0[o;;I"base_value;T;I"base-value;T;@o;	;I"em_base;T;I"em-base;T;@;
i±;
i±;[	o;;o;>
;?o;>
;?o;9;I"strip-unit;T;0;@;[o;	;I"
value;T;I"
value;T;@;
i²;
i²;:{ ;@;@;A;
i²;Bo;9;I"strip-unit;T;0;@;[o;	;I"base_value;T;I"base-value;T;@;
i²;
i²;:{ ;@;@;C;
i²;Bo;$;i;%[I"em;T;&[ ;@;
i²;'I"1em;F;I"
value;T;@;
i²;[ ;0u;[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"
value:ET:
@nameI"
value;	T:@options{ :
@linei³;@
:@operator:eq;i³:@operand2o:Sass::Script::Number:@valuei :@numerator_units[I"em;	T:@denominator_units[ ;@
;i³:@originalI"0em;	F0[o:Sass::Tree::VariableNode:
@expro;;i ;[ ;[ ;@
;i³;I"0;	F;
I"
value;	T;@
;i³:@children[ :@guarded0o;
;[I"/* Turn 0em into 0 */;T;@;;;
i³;[ o;=	;o;	;I"
value;T;I"
value;T;@;
i´;@;
i´;[ o;<;I"em-calc;T;0;@;	T;[[o;;I"values;T;I"values;T;@0[o;;I"base_value;T;I"base-value;T;@o;	;I"em_base;T;I"em-base;T;@;
i·;
i·;[
o;;o;9;I"length;T;0;@;[o;	;I"values;T;I"values;T;@;
i¸;
i¸;:{ ;I"max;T;@;
i¸;[ ;0u;J[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"max:ET:
@nameI"max;	T:@options{ :
@lineiº;@
:@operator:eq;iº:@operand2o:Sass::Script::Number:@valuei:@numerator_units[ :@denominator_units[ ;@
;iº:@originalI"1;	F0[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;
I"convert-to-em;	T:@splat0;@
:
@args[o;;
I"nth;	T;0;@
;[o;	;I"values;	T;
I"values;	T;@
;iºo;;i;[ ;@;@
;iº;I"1;	F;iº:@keywords{ o;	;I"base_value;	T;
I"base-value;	T;@
;iº;iº;{ ;@
;iº:@children[ o;;o;	;; ;[ ;@;
i¼;I"emValues;T;@;
i¼;[ ;0o:Sass::Tree::ForNode:	@varI"i;T:
@fromo;$;i;%[ ;&@;;@;
i½;'I"1;F:@too;	;I"max;T;I"max;T;@;
i½:@exclusiveF;[o;;o;9;I"append;T;0;@;[o;	;I"emValues;T;I"emValues;T;@;
i¾o;9;I"convert-to-em;T;0;@;[o;9;I"nth;T;0;@;[o;	;I"values;T;I"values;T;@;
i¾o;	;I"i;T;I"i;T;@;
i¾;
i¾;:{ o;	;I"base_value;T;I"base-value;T;@;
i¾;
i¾;:{ ;
i¾;:{ ;I"emValues;T;@;
i¾;[ ;0;
i½;	T;@o;=	;o;	;I"emValues;T;I"emValues;T;@;
iÀ;@;
iÀ;[ o;
;[I"%/* Support for the old syntax */;T;@;;;
iÃ;[ o;<;I"emCalc;T;0;@;	T;[[o;;I"values;T;I"values;T;@0;
iÅ;[o;=	;o;9;I"em-calc;T;0;@;[o;	;I"values;T;I"values;T;@;
iÆ;
iÆ;:{ ;@;
iÆ;[ o;
;[I"/* Maybe you want to create rems with pixels
 * $rem-base: 0.625 !default; //Set the value corresponding to body font size. In this case, you should set as: body {font-size: 62.5%;}
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $rem-base * 1rem;
 * } */;T;@;;;
iÉ;[ o;
;[I"8/* We use these to control various global styles */;T;@;;;
iÏ;[ o;;o:Sass::Script::Color	;0;@;
iÐ:@attrs{	:rediÿ:
greeniÿ:	blueiÿ:
alphai;I"body-bg;T;@;
iÐ;[ ;I"!default;To;;o;J	;0;@;
iÑ;K{	;Li';Mi';Ni';Oi;I"body-font-color;T;@;
iÑ;[ ;I"!default;To;;o;	;;;;[
o;!	;I"Helvetica Neue;T;@;:string;
iÒo;!	;I"Helvetica;T;@;;P;
iÒo;!	;I"Helvetica;T;@;;";
iÒo;!	;I"
Arial;T;@;;";
iÒo;!	;I"sans-serif;T;@;;";
iÒ;@;
iÒ;I"body-font-family;T;@;
iÒ;[ ;I"!default;To;;o;!	;I"normal;T;@;;";
iÓ;I"body-font-weight;T;@;
iÓ;[ ;I"!default;To;;o;!	;I"normal;T;@;;";
iÔ;I"body-font-style;T;@;
iÔ;[ ;I"!default;To;
;[I"0/* We use this to control font-smoothing */;T;@;;;
iÖ;[ o;;o;!	;I"subpixel-antialiased;T;@;;";
i×;I"font-smoothing;T;@;
i×;[ ;I"!default;To;
;[I":/* We use these to control text direction settings */;T;@;;;
iÙ;[ o;;o;!	;I"ltr;T;@;;";
iÚ;I"text-direction;T;@;
iÚ;[ ;I"!default;To;
;[I"h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;T;@;;;
iÜ;[ o;;o;!	;I"	left;T;@;;";
iÝ;I"default-float;T;@;
iÝ;[ ;I"!default;To;;o;!	;I"
right;T;@;;";
iÞ;I"opposite-direction;T;@;
iÞ;[ ;I"!default;Tu;ö[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@underscored_nameI"text_direction:ET:
@nameI"text-direction;	T:@options{ :
@lineiß;@
:@operator:eq;iß:@operand2o:Sass::Script::String	:@valueI"ltr;	T;@
:
@type:identifier;ißu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@expro:Sass::Script::String	:@valueI"
right:ET:@options{ :
@type:identifier:
@lineiã:
@nameI"default-float;	T;
@
;iã:@children[ :@guarded0o; ;o;	;I"	left;	T;
@
;;;iä;I"opposite-direction;	T;
@
;iä;[ ;0[o:Sass::Tree::VariableNode:
@expro;	;I"	left;	T;@
;;;ià;
I"default-float;	T;@
;ià:@children[ :@guarded0o;;o;	;I"
right;	T;@
;;;iá;
I"opposite-direction;	T;@
;iá;[ ;0o;
;[I"4/* We use these as default colors throughout */;T;@;;;
iç;[ o;;o;J	;0;@;
iè;K{	;Li0;Mi¦;NiË;Oi;I"primary-color;T;@;
iè;[ ;I"!default;To;;o;J	;0;@;
ié;K{	;Lié;Mié;Nié;Oi;I"secondary-color;T;@;
ié;[ ;I"!default;To;;o;J	;0;@;
iê;K{	;LiÆ;Mi;Ni;Oi;I"alert-color;T;@;
iê;[ ;I"!default;To;;o;J	;0;@;
ië;K{	;Lib;Mi¤;Ni(;Oi;I"success-color;T;@;
ië;[ ;I"!default;To;
;[I"W/* We use these to make sure border radius matches unless we want it different. */;T;@;;;
ií;[ o;;o;$;i;%[I"px;T;&[ ;@;
iî;'I"3px;F;I"global-radius;T;@;
iî;[ ;I"!default;To;;o;$;iè;%[I"px;T;&[ ;@;
iï;'I"1000px;F;I"global-rounded;T;@;
iï;[ ;I"!default;To;
;[I"L/* We use these to control inset shadow shiny edges and depressions. */;T;@;;;
iñ;[ o;;o;	;; ;[o;$;i ;%[ ;&@;;@;
iò;'I"0;Fo;$;i;%[I"px;T;&[ ;@;
iò;'I"1px;Fo;$;i ;%[ ;&@;;@;
iò;'I"0;F;@;
iò;I"shiny-edge-size;T;@;
iò;[ ;I"!default;To;;o;9;I"	rgba;T;0;@;[o;J	;0;@;
ió;K{	;Liÿ;Miÿ;Niÿ;Oio;$;f0.5;%[ ;&@;;@;
ió;'I"0.5;F;
ió;:{ ;I"shiny-edge-color;T;@;
ió;[ ;I"!default;To;;o;9;I"	rgba;T;0;@;[o;J	;0;@;
iô;K{	;Li ;Mi ;Ni ;Oio;$;f0.2;%[ ;&@;;@;
iô;'I"0.2;F;
iô;:{ ;I"shiny-edge-active-color;T;@;
iô;[ ;I"!default;To;
;[I"[/* We use this to control whether or not CSS classes come through in the gem files. */;T;@;;;
iö;[ o;;o;;T;
i÷;@;I"include-html-classes;T;@;
i÷;[ ;I"!default;To;;o;;T;
iø;@;I"include-print-styles;T;@;
iø;[ ;I"!default;To;;o;	;I"include_html_classes;T;I"include-html-classes;T;@;
iù;I" include-html-global-classes;T;@;
iù;[ ;I"!default;To;
;[I"/* Media Queries */;T;@;;;
iû;[ o;;o;$;i ;%[I"px;T;&[ ;@;
iü;'I"
768px;F;I"small-screen;T;@;
iü;[ ;I"!default;To;;o;$;i ;%[I"px;T;&[ ;@;
iý;'I"1280px;F;I"medium-screen;T;@;
iý;[ ;I"!default;To;;o;$;i ;%[I"px;T;&[ ;@;
iþ;'I"1440px;F;I"large-screen;T;@;
iþ;[ ;I"!default;To;;o;!	;I"only screen;T;@;;P;
i ;I"screen;T;@;
i ;[ ;I"!default;To;;o:&Sass::Script::StringInterpolation
:@beforeo;!	;I"!only screen and (min-width: ;T;@;;P;
i:	@mido;	;I"small_screen;T;I"small-screen;T;@;
i:@aftero;!	;I");T;@;;P;
i;
i;@;I"
small;T;@;
i;[ ;I"!default;To;;o;Q
;Ro;!	;I" only screen and (min-width:;T;@;;P;
i;So;	;I"medium_screen;T;I"medium-screen;T;@;
i;To;!	;I");T;@;;P;
i;
i;@;I"medium;T;@;
i;[ ;I"!default;To;;o;Q
;Ro;!	;I" only screen and (min-width:;T;@;;P;
i;So;	;I"large_screen;T;I"large-screen;T;@;
i;To;!	;I");T;@;;P;
i;
i;@;I"
large;T;@;
i;[ ;I"!default;To;;o;!	;I"-only screen and (orientation: landscape);T;@;;P;
i;I"landscape;T;@;
i;[ ;I"!default;To;;o;!	;I",only screen and (orientation: portrait);T;@;;P;
i;I"portrait;T;@;
i;[ ;I"!default;To;
;[I"H/* Used to provide media query values for javascript components. */;T;@;;;
i;[ o;(;)[I"meta.foundation-mq-small;T;*o;+;,[o;-;,[o;.
;/o;0;1{ ;20;,[o:Sass::Selector::Element	;[I"	meta;T:@namespace0;4I" ;T;
io:Sass::Selector::Class;[I"foundation-mq-small;T;4@;
i;4@;
i;4@;
i;@;	T;
i;#i ;[o;;;;[I"font-family;T;o;	;I"
small;T;I"
small;T;@;
i	;@;
i	;#i ;[ o;;;;[I"
width;T;o;	;I"small_screen;T;I"small-screen;T;@;
i
;@;
i
;#i ;[ o;(;)[I"meta.foundation-mq-medium;T;*o;+;,[o;-;,[o;.
;/o;0;1{ ;20;,[o;U	;[I"	meta;T;V0;4I" ;T;
io;W;[I"foundation-mq-medium;T;4@¬;
i;4@¬;
i;4@¬;
i;@;	T;
i;#i ;[o;;;;[I"font-family;T;o;	;I"medium;T;I"medium;T;@;
i;@;
i;#i ;[ o;;;;[I"
width;T;o;	;I"medium_screen;T;I"medium-screen;T;@;
i;@;
i;#i ;[ o;(;)[I"meta.foundation-mq-large;T;*o;+;,[o;-;,[o;.
;/o;0;1{ ;20;,[o;U	;[I"	meta;T;V0;4I" ;T;
io;W;[I"foundation-mq-large;T;4@Í;
i;4@Í;
i;4@Í;
i;@;	T;
i;#i ;[o;;;;[I"font-family;T;o;	;I"
large;T;I"
large;T;@;
i;@;
i;#i ;[ o;;;;[I"
width;T;o;	;I"large_screen;T;I"large-screen;T;@;
i;@;
i;#i ;[ o;
;[I"w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;T;@;;;
i;[ o;;o;!	;I"crosshair;T;@;;";
i;I"cursor-crosshair-value;T;@;
i;[ ;I"!default;To;;o;!	;I"default;T;@;;";
i;I"cursor-default-value;T;@;
i;[ ;I"!default;To;;o;!	;I"pointer;T;@;;";
i;I"cursor-pointer-value;T;@;
i;[ ;I"!default;To;;o;!	;I"	help;T;@;;";
i;I"cursor-help-value;T;@;
i;[ ;I"!default;To;;o;!	;I"	text;T;@;;";
i;I"cursor-text-value;T;@;
i;[ ;I"!default;Tu; [o:Sass::Script::Variable	:@underscored_nameI" include_html_global_classes:ET:
@nameI" include-html-global-classes;T:@options{ :
@linei0[!o:Sass::Tree::CommentNode
:@value[I"F/* Set box-sizing globally to handle padding and border widths */;T;	@	:
@type:silent;
i!:@children[ o:Sass::Tree::RuleNode:
@rule[I"*,
  *:before,
  *:after;T:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;[o:Sass::Selector::Universal:@namespace0;
i$:@filenameI" ;T;@;
i$o;;[I"
;To;
;o;;{ ;0;[o;;0;
i$;@o:Sass::Selector::Pseudo
;[I"before;T:@syntactic_type:
class;@;
i$:	@arg0;@;
i$o;;[I"
;To;
;o;;{ ;0;[o;;0;
i$;@o;
;[I"
after;T;; ;@;
i$;!0;@;
i$;@;
i$;	@	:@has_childrenT;
i$:
@tabsi ;[o:Sass::Tree::MixinNode;I"box-sizing;T:
@args[o:Sass::Script::String	;I"border-box;T;	@	;:identifier;
i%:@keywords{ :@splat0;[ ;
i%;	@	o;;[I"html,
  body;T;o;;[o;;[o;
;o;;{ ;0;[o:Sass::Selector::Element	;[I"	html;T;0;I" ;T;
i);@H;
i)o;;[I"
;To;
;o;;{ ;0;[o;*	;[I"	body;T;0;@H;
i);@H;
i);@H;
i);	@	;"T;
i);#i ;[o:Sass::Tree::PropNode:@prop_syntax:new;[I"font-size;T;o; 	;I"base_font_size;T;I"base-font-size;T;	@	;
i);	@	;
i);#i ;[ o;
;[I"/* Default body styles */;T;	@	;;;
i+;[ o;;[I"	body;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"	body;T;0;I" ;T;
i,;@m;
i,;@m;
i,;	@	;"T;
i,;#i ;[o;+;,;-;[I"background;T;o; 	;I"body_bg;T;I"body-bg;T;	@	;
i-;	@	;
i-;#i ;[ o;+;,;-;[I"
color;T;o; 	;I"body_font_color;T;I"body-font-color;T;	@	;
i.;	@	;
i.;#i ;[ o;+;,;-;[I"padding;T;o;&;I"0;T;	@	;;';	@	;
i/;#i ;[ o;+;,;-;[I"margin;T;o;&;I"0;T;	@	;;';	@	;
i0;#i ;[ o;+;,;-;[I"font-family;T;o; 	;I"body_font_family;T;I"body-font-family;T;	@	;
i1;	@	;
i1;#i ;[ o;+;,;-;[I"font-weight;T;o; 	;I"body_font_weight;T;I"body-font-weight;T;	@	;
i2;	@	;
i2;#i ;[ o;+;,;-;[I"font-style;T;o; 	;I"body_font_style;T;I"body-font-style;T;	@	;
i3;	@	;
i3;#i ;[ o;+;,;-;[I"line-height;T;o;&;I"1;T;	@	;;';	@	;
i4;#i ;[ o;
;[I"F/* Set to $base-line-height to take on browser default of 150% */;T;	@	;;;
i4;[ o;+;,;-;[I"position;T;o;&;I"relative;T;	@	;;';	@	;
i5;#i ;[ o;+;,;-;[I"cursor;T;o; 	;I"cursor_default_value;T;I"cursor-default-value;T;	@	;
i6;	@	;
i6;#i ;[ o;;[I"a:hover;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"a;T;0;I" ;T;
i9o;
;[I"
hover;T;; ;@¾;
i9;!0;@¾;
i9;@¾;
i9;	@	;"T;
i9;#i ;[o;+;,;-;[I"cursor;T;o; 	;I"cursor_pointer_value;T;I"cursor-pointer-value;T;	@	;
i9;	@	;
i9;#i ;[ o;
;[I"B/* Grid Defaults to get images and embeds to work properly */;T;	@	;;;
i;;[ o;;[I"img,
  object,
  embed;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"img;T;0;I" ;T;
i>;@Ü;
i>o;;[I"
;To;
;o;;{ ;0;[o;*	;[I"object;T;0;@Ü;
i>;@Ü;
i>o;;[I"
;To;
;o;;{ ;0;[o;*	;[I"
embed;T;0;@Ü;
i>;@Ü;
i>;@Ü;
i>;	@	;"T;
i>;#i ;[o;+;,;-;[I"max-width;T;o;&;I"	100%;T;	@	;;';	@	;
i>;#i ;[ o;+;,;-;[I"height;T;o;&;I"	auto;T;	@	;;';	@	;
i>;#i ;[ o;;[I"object,
  embed;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"object;T;0;I" ;T;
iA;@;
iAo;;[I"
;To;
;o;;{ ;0;[o;*	;[I"
embed;T;0;@;
iA;@;
iA;@;
iA;	@	;"T;
iA;#i ;[o;+;,;-;[I"height;T;o;&;I"	100%;T;	@	;;';	@	;
iA;#i ;[ o;;[I"img;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"img;T;0;I" ;T;
iB;@,;
iB;@,;
iB;	@	;"T;
iB;#i ;[o;+;,;-;[I"-ms-interpolation-mode;T;o;&;I"bicubic;T;	@	;;';	@	;
iB;#i ;[ o;;[I"#map_canvas,
  .map_canvas;T;o;;[o;;[o;
;o;;{ ;0;[o:Sass::Selector::Id;[I"map_canvas;T;I" ;T;
iE;@B;
iEo;;[I"
;To;
;o;;{ ;0;[o:Sass::Selector::Class;[I"map_canvas;T;@B;
iE;@B;
iE;@B;
iE;	@	;"T;
iE;#i ;[o;;[I"img,
    embed,
    object;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"img;T;0;I" ;T;
iH;@\;
iHo;;[I"
;To;
;o;;{ ;0;[o;*	;[I"
embed;T;0;@\;
iH;@\;
iHo;;[I"
;To;
;o;;{ ;0;[o;*	;[I"object;T;0;@\;
iH;@\;
iH;@\;
iH;	@	;"T;
iH;#i ;[o;+;,;-;[I"max-width;T;o;&;I"none !important;T;	@	;;';	@	;
iH;#i ;[ o;
;[I",/* Miscellaneous useful HTML classes */;T;	@	;;;
iL;[ o;;[I"
.left;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"	left;T;I" ;T;
iM;@;
iM;@;
iM;	@	;"T;
iM;#i ;[o;+;,;-;[I"
float;T;o;&;I"left !important;T;	@	;;';	@	;
iM;#i ;[ o;;[I".right;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"
right;T;I" ;T;
iN;@ ;
iN;@ ;
iN;	@	;"T;
iN;#i ;[o;+;,;-;[I"
float;T;o;&;I"right !important;T;	@	;;';	@	;
iN;#i ;[ o;;[I".text-left;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"text-left;T;I" ;T;
iO;@¶;
iO;@¶;
iO;	@	;"T;
iO;#i ;[o;+;,;-;[I"text-align;T;o;&;I"left !important;T;	@	;;';	@	;
iO;#i ;[ o;;[I".text-right;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"text-right;T;I" ;T;
iP;@Ì;
iP;@Ì;
iP;	@	;"T;
iP;#i ;[o;+;,;-;[I"text-align;T;o;&;I"right !important;T;	@	;;';	@	;
iP;#i ;[ o;;[I".text-center;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"text-center;T;I" ;T;
iQ;@â;
iQ;@â;
iQ;	@	;"T;
iQ;#i ;[o;+;,;-;[I"text-align;T;o;&;I"center !important;T;	@	;;';	@	;
iQ;#i ;[ o;;[I".text-justify;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"text-justify;T;I" ;T;
iR;@ø;
iR;@ø;
iR;	@	;"T;
iR;#i ;[o;+;,;-;[I"text-align;T;o;&;I"justify !important;T;	@	;;';	@	;
iR;#i ;[ o;;[I"
.hide;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"	hide;T;I" ;T;
iS;@;
iS;@;
iS;	@	;"T;
iS;#i ;[o;+;,;-;[I"display;T;o;&;I"	none;T;	@	;;';	@	;
iS;#i ;[ o;
;[I"â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;T;	@	;;;
iU;[ o;;[I".antialiased;T;o;;[o;;[o;
;o;;{ ;0;[o;/;[I"antialiased;T;I" ;T;
iY;@(;
iY;@(;
iY;	@	;"T;
iY;#i ;[o;+;,;-;[I"-webkit-font-smoothing;T;o;&;I"antialiased;T;	@	;;';	@	;
iY;#i ;[ o;
;[I"W/* Get rid of gap under images by making them display: inline-block; by default */;T;	@	;;;
i[;[ o;;[I"img;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"img;T;0;I" ;T;
i\;@B;
i\;@B;
i\;	@	;"T;
i\;#i ;[o;+;,;-;[I"display;T;o;&;I"inline-block;T;	@	;;';	@	;
i];#i ;[ o;+;,;-;[I"vertical-align;T;o;&;I"middle;T;	@	;;';	@	;
i^;#i ;[ o;
;[I"(/*
 * Global resets for forms
 * */;T;	@	;;;
ia;[ o;
;[I";/* Make sure textarea takes on height automatically */;T;	@	;;;
ie;[ o;;[I"textarea;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"textarea;T;0;I" ;T;
if;@f;
if;@f;
if;	@	;"T;
if;#i ;[o;+;,;-;[I"height;T;o;&;I"	auto;T;	@	;;';	@	;
if;#i ;[ o;+;,;-;[I"min-height;T;o;&;I"	50px;T;	@	;;';	@	;
if;#i ;[ o;
;[I"5/* Make select elements 100% width by default */;T;	@	;;;
ih;[ o;;[I"select;T;o;;[o;;[o;
;o;;{ ;0;[o;*	;[I"select;T;0;I" ;T;
ii;@;
ii;@;
ii;	@	;"T;
ii;#i ;[o;+;,;-;[I"
width;T;o;&;I"	100%;T;	@	;;';	@	;
ii;#i ;[ 